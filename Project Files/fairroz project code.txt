// Business Rule: Auto-assign to Student IT Support group
// Table: Incident
// When: Before Insert
// Condition: current.category == 'student_it_support'

(function executeRule(current, gsn) {
    var group = new GlideRecord('sys_user_group');
    group.addQuery('name', 'Student IT Support');
    group.query();
    if (group.next()) {
        current.assignment_group = group.sys_id;
    }
})(current, gsn);
Or a catalog item script for a student requesting a transcript:

javascript
Copy
Edit
// Script for catalog client script (type: onChange)
function onChange(control, oldValue, newValue, isLoading) {
    if (isLoading || newValue == '') {
        return;
    }
    if (newValue == 'Official') {
        g_form.setVisible('delivery_method', true);
    } else {
        g_form.setVisible('delivery_method', false);
    }
}
Let me know your exact need—whether it’s code, file structure, or a case study—and I can tailor it.




// Business Rule: Auto-assign to Student IT Support group
// Table: Incident
// When: Before Insert
// Condition: current.category == 'student_it_support'

(function executeRule(current, gsn) {
    var group = new GlideRecord('sys_user_group');
    group.addQuery('name', 'Student IT Support');
    group.query();
    if (group.next()) {
        current.assignment_group = group.sys_id;
    }
})(current, gsn);
Or a catalog item script for a student requesting a transcript:

javascript
Copy
Edit
// Script for catalog client script (type: onChange)
function onChange(control, oldValue, newValue, isLoading) {
    if (isLoading || newValue == '') {
        return;
    }
    if (newValue == 'Official') {
        g_form.setVisible('delivery_method', true);
    } else {
        g_form.setVisible('delivery_method', false);
    }
}
Let me know your exact need—whether it’s code, file structure, or a case study—and I can tailor it.



// Business Rule: Auto-assign to Student IT Support group
// Table: Incident
// When: Before Insert
// Condition: current.category == 'student_it_support'

(function executeRule(current, gsn) {
    var group = new GlideRecord('sys_user_group');
    group.addQuery('name', 'Student IT Support');
    group.query();
    if (group.next()) {
        current.assignment_group = group.sys_id;
    }
})(current, gsn);